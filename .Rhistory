}
#join events that are 3 or less pentads apart
index_aux3 <- rle(swc_df$is.fd)$lengths
index_aux4 <- runner::runner(index_aux3, f = sum)
index_aux3 <- index_aux3[seq(1,length(index_aux3),2)]
index_aux4 <- index_aux4[seq(1,length(index_aux4),2)]
length_short_breaks <- index_aux3[which(index_aux3 < 4)]
position_short_breaks <- index_aux4[which(index_aux3 < 4)]
for (i in 1:length(length_short_breaks)){
beg_break <- position_short_breaks[i] - length_short_breaks[i] + 1
for (j in beg_break:position_short_breaks[i]){
swc_df$is.fd[j] <- 1
}
}
swc_df$dur <- 0
# fix duration (after onset)
for (i in 2:nrow(swc_df)){
if((swc_df$is.fd[i-1] == 1) & (swc_df$is.fd[i] == 0) & (swc_df$percentile[i] <= threshold)){
swc_df$is.fd[i] <- 1
}
if (swc_df$is.fd[i]>0){
swc_df$dur[i] <- swc_df$dur[i-1] + swc_df$is.fd[i]
}
}
# # limit max duration
# for (i in 1:nrow(swc_df)){
#   if (swc_df$dur[i] > 12) {
#     swc_df$dur[i] <- 0
#     swc_df$is.fd[i] <- 0
#   }
# }
#
#
######################################################
swc_df$event <- 0
count <- 1
for (i in 2:nrow(swc_df)){
if ((swc_df$dur[i-1] != 0) & (swc_df$dur[i] == 0)){
swc_df$event[i-1] <- count
count <- count+1
}
}
fd_summary <- swc_df[swc_df$event != 0,]
fd_summary <- fd_summary[,c(1:3,12,13)]
swc_df <- swc_df[,c(1:4,10:13)]
# get series of 20 and 40 percentiles for visualization
n_years <- max(lubridate::year(swc_pentad[[1]]$time)) - min(lubridate::year(swc_pentad[[1]]$time)) + 1
p_threshold <- NA
p40<- NA
for (i in 1:73){
p_threshold[i] <- quantile(swc_pentad[[2]][i,], probs = threshold/100, na.rm = T)
p40[i] <- quantile(swc_pentad[[2]][i,], probs = 0.4, na.rm = T)
}
p_threshold_series <- rep(p_threshold,n_years)
p40_series <- rep(p40,n_years)
#add p20 and p40 for visualization
swc_df$pthreshold <- p_threshold_series[firstNonNA:length(p_threshold_series)]
swc_df$p40 <- p40_series[firstNonNA:length(p40_series)]
NAs <- data.frame(matrix(NA,ncol = ncol(swc_df), nrow =firstNonNA - 1))
colnames(NAs) <- colnames(swc_df)
if(firstNonNA>1){
NAs$time <- swc_pentad[[1]]$time[1:(firstNonNA - 1)]
swc_df <- rbind(NAs, swc_df)
}
swc_df <- swc_df[,c(1:4,9,10,5:8)]
output <- list('FD_time_series' = swc_df, 'FD_info' = fd_summary)
library(fdClassify)
library(fdClassify)
################################## FLUXNET #########################################
flux_dir <- 'C:/Users/pedro/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/@run_EU_Stations/fluxnet/'
flux_files <- list.files(flux_dir)
flux_files <- flux_files[-c(1)]
flux_names <- substr(flux_files, start = 5, stop = 10)
df_d <- df_fluxnet(paste(flux_dir,flux_files[i], sep = ''), timestep = 'day', soil_level = 1)
################################## FLUXNET #########################################
flux_dir <- 'C:/Users/pedro/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/@run_EU_Stations/fluxnet/'
flux_files <- list.files(flux_dir)
flux_files <- flux_files[-c(1)]
flux_names <- substr(flux_files, start = 5, stop = 10)
flux_names
i = 1
df_d <- df_fluxnet(paste(flux_dir,flux_files[i], sep = ''), timestep = 'day', soil_level = 1)
df_d
penman_day(vtime = df_d$time,
vwind = df_d$wind_speed,
vtemp = df_d$temperature,
vvpd = df_d$vapor_p_def,
vheatflux = df_d$latent_heat,
altitude = 0)
et0 <- penman_day(vtime = df_d$time,
vwind = df_d$wind_speed,
vtemp = df_d$temperature,
vvpd = df_d$vapor_p_def,
vheatflux = df_d$latent_heat,
altitude = 0)
test <- alencar2021(df_d$time, df_d$precipitation, et0$et0)
test
pedro <- alencar2021(df_d$time, df_d$precipitation, et0$et0)
ford <- FordLabosier2017(df_d$time, df_d$soil_water)
plot(pedro[[1]]$Date,pedro[[1]]$is.fd)
points(ford[[1]]$Date,ford[[1]]$is.fd, col = 'red')
points(ford[[1]]$time,ford[[1]]$is.fd, col = 'red')
plot(pedro[[1]]$Date,pedro[[1]]$is.fd)
points(ford[[1]]$time,ford[[1]]$is.fd, col = 'red')
plot(pedro[[1]]$Date,pedro[[1]]$is.fd, 'l')
lines(ford[[1]]$time,ford[[1]]$is.fd, col = 'red')
plot(ford[[1]]$time,ford[[1]]$is.fd, col = 'red')
plot(ford[[1]]$time,ford[[1]]$is.fd, col = 'red', 'l')
plot(pedro[[1]]$Date,pedro[[1]]$is.fd, 'l')
plot(ford[[1]]$time,ford[[1]]$is.fd, col = 'red', 'l')
lines(ford[[1]]$time,ford[[1]]$is.fd, col = 'red', 'l')
plot(pedro[[1]]$Date,pedro[[1]]$is.fd, 'l')
lines(ford[[1]]$time,ford[[1]]$is.fd, col = 'red', 'l')
plot(pedro[[1]]$Date,pedro[[1]]$is.fd, 'l')+
lines(ford[[1]]$time,ford[[1]]$is.fd, col = 'red', 'l')
pedro[[1]]
pedro <- pedro[[1]][,c(1,ncol(pedro[[1]]))]
pedro
ford
ford <- ford[[1]][,c(1,ncol(ford[[1]]))]
all <- dplyr::left_join(pedro, ford)
all
nrow(pedro)
nrow(ford)
plot(pedro[[1]]$Date,pedro[[1]]$is.fd, 'l')+
lines(ford[[1]]$time,ford[[1]]$is.fd, col = 'red', 'l')
plot(pedro[[1]]$Date,pedro[[1]]$is.fd, 'l')+
lines(ford[[1]]$time,ford[[1]]$is.fd, col = 'red', 'l')
plot(pedro, 'l')+
lines(ford[[1]]$time,ford[[1]]$is.fd, col = 'red', 'l')
plot(pedro, 'l')+
lines(ford, col = 'red', 'l')
plot(pedro, 'l')
plot(pedro, 'l')
plot(ford, col = 'red', 'l')
plot(pedro, 'l')
plot(ford, col = 'red', 'l')
+
plot(ford, col = 'red', 'l')
plot(pedro, 'l')+
lines(ford, col = 'red', 'l')
pedro <- alencar2021(df_d$time, df_d$precipitation, et0$et0)
pedro[[2]]
ford <- FordLabosier2017(df_d$time, df_d$soil_water)
ford[[2]]
i = 2
df_d <- df_fluxnet(paste(flux_dir,flux_files[i], sep = ''), timestep = 'day', soil_level = 1)
et0 <- penman_day(vtime = df_d$time,
vwind = df_d$wind_speed,
vtemp = df_d$temperature,
vvpd = df_d$vapor_p_def,
vheatflux = df_d$latent_heat,
altitude = 0)
pedro <- alencar2021(df_d$time, df_d$precipitation, et0$et0)
pedro[[2]]
pedro <- pedro[[1]][,c(1,ncol(pedro[[1]]))]
ford <- FordLabosier2017(df_d$time, df_d$soil_water)
ford[[2]]
i = 11
df_d <- df_fluxnet(paste(flux_dir,flux_files[i], sep = ''), timestep = 'day', soil_level = 1)
et0 <- penman_day(vtime = df_d$time,
vwind = df_d$wind_speed,
vtemp = df_d$temperature,
vvpd = df_d$vapor_p_def,
vheatflux = df_d$latent_heat,
altitude = 0)
pedro <- alencar2021(df_d$time, df_d$precipitation, et0$et0)
pedro[[2]]
pedro <- pedro[[1]][,c(1,ncol(pedro[[1]]))]
ford <- FordLabosier2017(df_d$time, df_d$soil_water)
ford[[2]]
flux_files[i]
plot(pedro, 'l')
pedro <- pedro[[1]][,c(1,ncol(pedro[[1]]))]
pedro
plot(pedro, 'l')
plot(pedro)
ggplot(pedro, aes(x = Date, y = is.fd))+
geom_line()
library(ggplot2)
library(ggplot2)
ggplot(pedro, aes(x = Date, y = is.fd))+
geom_line()
ggplot(pedro, aes(x = Date, y = is.fd))+
geom_line()+
ylim(0,0.1)
ggplot(pedro, aes(x = Date, y = is.fd))+
geom_line()+
ylim(0.9,1)
ggplot(pedro, aes(x = Date, y = is.fd))+
geom_bar()+
ylim(0.9,1)
ggplot(pedro, aes(x = Date))+
geom_bar(aes(is.fd))+
lines(ford, col = 'red', 'l')
ggplot(pedro, aes(x = Date))+
geom_bar(aes(is.fd))
ggplot(pedro, aes(x = Date))+
geom_bar(aes(weight = is.fd))
vet0 <- et0$et0
vtime <- df_d$time
vprecipitation <- df_d$precipitation
vet0 <- et0$et0
crit = c(4, 2, 8, 2)
months = c(3,10)){
#crit = c(a1,a2,a3,a4)
#a1 = accumulation time for slope
#a2 = threshold for combined anomaly (sum)
#a3 = lantency period of negative SPEI
#a4 = allows positive spei over latency period
###### calculate SPEI #############
deficit <- data.frame(time = vtime, deficit = vprecipitation - vet0)
# cast deficit into weeks and arrange it (weeks according to Noguera)
week.data <- f.week(deficit, kind = 'standard')
#get accumulated deficit over four weeks
spei_list <- f.spei(week.data[[1]]$time, week.data[[1]]$var, n = crit[1])
spei <- spei_list[[1]]$spei
###################################
df <- data.frame(Date = vtime, precipitation = vprecipitation, et0 = vet0)
# df$month <- lubridate::month(df$time)
##########################
#get interval MAMJJASO
df$precipitation[lubridate::month(df$Date) > months[2] | lubridate::month(df$Date) <  months[1]] <- NA
df$et0[lubridate::month(df$Date) >  months[2] | lubridate::month(df$Date) <  months[1]] <- NA
df_precipitation <- dplyr::select(df,Date, precipitation)
df_et0 <- dplyr::select(df,Date, et0)
#colapse interval into weeks
week_et0 <- f.week(df_et0, f = sum, kind = 'standard')[[2]]
week_precipitation <- f.week(df_precipitation, f = sum)[[2]]
week_series <-f.week(df_et0, f = sum)[[1]][,1]
# note that in the first three weeks of march are we cant accumulate 4 weeks to assess
#   slope. The method works starting on the 22nd of March, in the first day of Spring
slope_4w_et0 <- apply(week_et0,2, FUN = function(x) runner::runner(x,sum, k = crit[1]))
slope_4w_et0[1:3,] <- NA
slope_4w_prec  <- apply(week_precipitation,2, FUN = function(x) runner::runner(x,sum, k = crit[1]))
slope_4w_prec[1:3,] <- NA
slope_anomaly_et0 <- t(apply(slope_4w_et0,1, f.anomaly))
slope_anomaly_prec <- t(apply(slope_4w_prec,1, f.anomaly))
df_complete <- data.frame(Date = as.Date(week_series$time), precip = c(week_precipitation),
et0 = c(week_et0),
slope_precip = c(slope_4w_prec),
slope_et0 = c(slope_4w_et0),
anomaly_slope_prec = c(slope_anomaly_prec),
anomaly_slope_et0 = c(slope_anomaly_et0),
spei = spei)
#get events
df_complete$spei_sign <- runner::runner(sign(df_complete$spei),sum, k = crit[3])
df_complete$is.fd <- (df_complete$anomaly_slope_et0 - df_complete$anomaly_slope_prec >= crit[2])*
(df_complete$spei_sign>(crit[4] - crit[3])) * (df_complete$spei <= -1)
df_complete[is.na(df_complete)] <- 0
#get duration into the intensfication fase
for (i in 2:nrow(df_complete)){
if(df_complete$is.fd[i-1] == 0 & df_complete$is.fd[[i]] == 1){
df_complete$is.fd[(i-3):(i-1)] <- 1
}
}
# join events with one week interruption
for (i in 2:(nrow(df_complete)-1)){
if(df_complete$is.fd[i-1] == 1 & df_complete$is.fd[[i+1]] == 1){
df_complete$is.fd[i] <- 1
}
}
#summary data frame
fd_summary <- NULL
for (i in 1:(nrow(df_complete)-1)){
if (df_complete$is.fd[i] == 1 & df_complete$is.fd[i+1] == 0){
fd_summary <- rbind(fd_summary, df_complete[i,])
}
}
output <- list(series = df_complete, summary = fd_summary)
months = c(3,10))
################################## FLUXNET #########################################
flux_dir <- 'C:/Users/pedro/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/@run_EU_Stations/fluxnet/'
flux_files <- list.files(flux_dir)
flux_files <- flux_files[-c(1)]
flux_names <- substr(flux_files, start = 5, stop = 10)
i = 11
df_d <- df_fluxnet(paste(flux_dir,flux_files[i], sep = ''), timestep = 'day', soil_level = 1)
et0 <- penman_day(vtime = df_d$time,
vwind = df_d$wind_speed,
vtemp = df_d$temperature,
vvpd = df_d$vapor_p_def,
vheatflux = df_d$latent_heat,
altitude = 0)
vtime <- df_d$time
vprecipitation <- df_d$precipitation
vet0 <- et0$et0
crit = c(4, 2, 8, 2)
months = c(3,10))
###### calculate SPEI #############
deficit <- data.frame(time = vtime, deficit = vprecipitation - vet0)
deficit
# cast deficit into weeks and arrange it (weeks according to Noguera)
week.data <- f.week(deficit, kind = 'standard')
#get accumulated deficit over four weeks
spei_list <- f.spei(week.data[[1]]$time, week.data[[1]]$var, n = crit[1])
spei <- spei_list[[1]]$spei
df <- data.frame(Date = vtime, precipitation = vprecipitation, et0 = vet0)
#get interval MAMJJASO
df$precipitation[lubridate::month(df$Date) > months[2] | lubridate::month(df$Date) <  months[1]] <- NA
months = c(3,10))
###### calculate SPEI #############
deficit <- data.frame(time = vtime, deficit = vprecipitation - vet0)
# cast deficit into weeks and arrange it (weeks according to Noguera)
week.data <- f.week(deficit, kind = 'standard')
#get accumulated deficit over four weeks
spei_list <- f.spei(week.data[[1]]$time, week.data[[1]]$var, n = crit[1])
spei <- spei_list[[1]]$spei
df <- data.frame(Date = vtime, precipitation = vprecipitation, et0 = vet0)
#get interval MAMJJASO
df$precipitation[lubridate::month(df$Date) > months[2] | lubridate::month(df$Date) <  months[1]] <- NA
df$et0[lubridate::month(df$Date) >  months[2] | lubridate::month(df$Date) <  months[1]] <- NA
#get interval MAMJJASO
df$precipitation[lubridate::month(df$Date) > months[2] | lubridate::month(df$Date) <  months[1]] <- NA
df
df <- data.frame(Date = vtime, precipitation = vprecipitation, et0 = vet0)
#get interval MAMJJASO
df$precipitation[lubridate::month(df$Date) > months[2] | lubridate::month(df$Date) <  months[1]] <- NA
Sys.setenv(lang = 'en')
#get interval MAMJJASO
df$precipitation[lubridate::month(df$Date) > months[2] | lubridate::month(df$Date) <  months[1]] <- NA
months = c(3,10)
###### calculate SPEI #############
deficit <- data.frame(time = vtime, deficit = vprecipitation - vet0)
# cast deficit into weeks and arrange it (weeks according to Noguera)
week.data <- f.week(deficit, kind = 'standard')
#get accumulated deficit over four weeks
spei_list <- f.spei(week.data[[1]]$time, week.data[[1]]$var, n = crit[1])
spei <- spei_list[[1]]$spei
df <- data.frame(Date = vtime, precipitation = vprecipitation, et0 = vet0)
#get interval MAMJJASO
df$precipitation[lubridate::month(df$Date) > months[2] | lubridate::month(df$Date) <  months[1]] <- NA
df$et0[lubridate::month(df$Date) >  months[2] | lubridate::month(df$Date) <  months[1]] <- NA
df_precipitation <- dplyr::select(df,Date, precipitation)
df_et0 <- dplyr::select(df,Date, et0)
#colapse interval into weeks
week_et0 <- f.week(df_et0, f = sum, kind = 'standard')[[2]]
week_precipitation <- f.week(df_precipitation, f = sum)[[2]]
week_series <-f.week(df_et0, f = sum)[[1]][,1]
# note that in the first three weeks of march are we cant accumulate 4 weeks to assess
#   slope. The method works starting on the 22nd of March, in the first day of Spring
slope_4w_et0 <- apply(week_et0,2, FUN = function(x) runner::runner(x,sum, k = crit[1]))
slope_4w_et0[1:3,] <- NA
slope_4w_prec  <- apply(week_precipitation,2, FUN = function(x) runner::runner(x,sum, k = crit[1]))
slope_4w_prec[1:3,] <- NA
slope_anomaly_et0 <- t(apply(slope_4w_et0,1, f.anomaly))
slope_anomaly_prec <- t(apply(slope_4w_prec,1, f.anomaly))
df_complete <- data.frame(Date = as.Date(week_series$time), precip = c(week_precipitation),
et0 = c(week_et0),
slope_precip = c(slope_4w_prec),
slope_et0 = c(slope_4w_et0),
anomaly_slope_prec = c(slope_anomaly_prec),
anomaly_slope_et0 = c(slope_anomaly_et0),
spei = spei)
#get events
df_complete$spei_sign <- runner::runner(sign(df_complete$spei),sum, k = crit[3])
df_complete$is.fd <- (df_complete$anomaly_slope_et0 - df_complete$anomaly_slope_prec >= crit[2])*
(df_complete$spei_sign>(crit[4] - crit[3])) * (df_complete$spei <= -1)
df_complete[is.na(df_complete)] <- 0
df_complete
#get duration into the intensfication fase
for (i in 2:nrow(df_complete)){
if(df_complete$is.fd[i-1] == 0 & df_complete$is.fd[[i]] == 1){
df_complete$is.fd[(i-3):(i-1)] <- 1
}
}
#join events that are 2 or less weeks apart
index_aux3 <- rle(df_complete$is.fd)$lengths
index_aux3
index_aux4 <- runner::runner(index_aux3, f = sum)
index_aux4
index_aux3 <- index_aux3[seq(1,length(index_aux3),2)]
index_aux3
length_short_breaks <- index_aux3[which(index_aux3 < 4)]
position_short_breaks <- index_aux4[which(index_aux3 < 4)]
#join events that are 3 or less weeks apart
index_aux3 <- rle(df_complete$is.fd)$lengths
index_aux4 <- runner::runner(index_aux3, f = sum)
index_aux3 <- index_aux3[seq(1,length(index_aux3),2)]
index_aux4 <- index_aux4[seq(1,length(index_aux4),2)]
length_short_breaks <- index_aux3[which(index_aux3 < 4)]
position_short_breaks <- index_aux4[which(index_aux3 < 4)]
for (i in 1:length(length_short_breaks)){
beg_break <- position_short_breaks[i] - length_short_breaks[i] + 1
for (j in beg_break:position_short_breaks[i]){
swc_df$df_complete[j] <- 1
}
}
for (i in 1:length(length_short_breaks)){
beg_break <- position_short_breaks[i] - length_short_breaks[i] + 1
for (j in beg_break:position_short_breaks[i]){
df_complete$is.fd[j] <- 1
}
}
#join events that are 3 or less weeks apart
index_aux3 <- rle(df_complete$is.fd)$lengths
index_aux4 <- runner::runner(index_aux3, f = sum)
index_aux3
index_aux4
source('~/.active-rstudio-document', echo=TRUE)
index_aux3
index_aux4
library(fdClassify)
################################## FLUXNET #########################################
flux_dir <- 'C:/Users/pedro/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/@run_EU_Stations/fluxnet/'
flux_files <- list.files(flux_dir)
flux_files <- flux_files[-c(1)]
flux_names <- substr(flux_files, start = 5, stop = 10)
i = 11
df_d <- df_fluxnet(paste(flux_dir,flux_files[i], sep = ''), timestep = 'day', soil_level = 1)
et0 <- penman_day(vtime = df_d$time,
vwind = df_d$wind_speed,
vtemp = df_d$temperature,
vvpd = df_d$vapor_p_def,
vheatflux = df_d$latent_heat,
altitude = 0)
vtime <- df_d$time
vprecipitation <- df_d$precipitation
vet0 <- et0$et0
crit = c(4, 2, 8, 2)
months = c(3,10)
#crit = c(a1,a2,a3,a4)
#a1 = accumulation time for slope
#a2 = threshold for combined anomaly (sum)
#a3 = lantency period of negative SPEI
#a4 = allows positive spei over latency period
###### calculate SPEI #############
deficit <- data.frame(time = vtime, deficit = vprecipitation - vet0)
# cast deficit into weeks and arrange it (weeks according to Noguera)
week.data <- f.week(deficit, kind = 'standard')
#get accumulated deficit over four weeks
spei_list <- f.spei(week.data[[1]]$time, week.data[[1]]$var, n = crit[1])
spei <- spei_list[[1]]$spei
###################################
df <- data.frame(Date = vtime, precipitation = vprecipitation, et0 = vet0)
# df$month <- lubridate::month(df$time)
##########################
#get interval MAMJJASO
df$precipitation[lubridate::month(df$Date) > months[2] | lubridate::month(df$Date) <  months[1]] <- NA
df$et0[lubridate::month(df$Date) >  months[2] | lubridate::month(df$Date) <  months[1]] <- NA
df_precipitation <- dplyr::select(df,Date, precipitation)
df_et0 <- dplyr::select(df,Date, et0)
#colapse interval into weeks
week_et0 <- f.week(df_et0, f = sum, kind = 'standard')[[2]]
week_precipitation <- f.week(df_precipitation, f = sum)[[2]]
week_series <-f.week(df_et0, f = sum)[[1]][,1]
# note that in the first three weeks of march are we cant accumulate 4 weeks to assess
#   slope. The method works starting on the 22nd of March, in the first day of Spring
slope_4w_et0 <- apply(week_et0,2, FUN = function(x) runner::runner(x,sum, k = crit[1]))
slope_4w_et0[1:3,] <- NA
slope_4w_prec  <- apply(week_precipitation,2, FUN = function(x) runner::runner(x,sum, k = crit[1]))
slope_4w_prec[1:3,] <- NA
slope_anomaly_et0 <- t(apply(slope_4w_et0,1, f.anomaly))
slope_anomaly_prec <- t(apply(slope_4w_prec,1, f.anomaly))
df_complete <- data.frame(Date = as.Date(week_series$time), precip = c(week_precipitation),
et0 = c(week_et0),
slope_precip = c(slope_4w_prec),
slope_et0 = c(slope_4w_et0),
anomaly_slope_prec = c(slope_anomaly_prec),
anomaly_slope_et0 = c(slope_anomaly_et0),
spei = spei)
#get events
df_complete$spei_sign <- runner::runner(sign(df_complete$spei),sum, k = crit[3])
df_complete$is.fd <- (df_complete$anomaly_slope_et0 - df_complete$anomaly_slope_prec >= crit[2])*
(df_complete$spei_sign>(crit[4] - crit[3])) * (df_complete$spei <= -1)
df_complete[is.na(df_complete)] <- 0
#get duration into the intensfication fase
for (i in 2:nrow(df_complete)){
if(df_complete$is.fd[i-1] == 0 & df_complete$is.fd[[i]] == 1){
df_complete$is.fd[(i-3):(i-1)] <- 1
}
}
View(df_complete)
#join events that are 3 or less weeks apart
index_aux3 <- rle(df_complete$is.fd)$lengths
index_aux4 <- runner::runner(index_aux3, f = sum)
index_aux3 <- index_aux3[seq(1,length(index_aux3),2)]
index_aux4 <- index_aux4[seq(1,length(index_aux4),2)]
length_short_breaks <- index_aux3[which(index_aux3 < 4)]
position_short_breaks <- index_aux4[which(index_aux3 < 4)]
for (i in 1:length(length_short_breaks)){
beg_break <- position_short_breaks[i] - length_short_breaks[i] + 1
for (j in beg_break:position_short_breaks[i]){
df_complete$is.fd[j] <- 1
}
}
#join events that are 3 or less weeks apart
index_aux3 <- rle(df_complete$is.fd)$lengths
index_aux3
index_aux3 <- index_aux3[seq(1,length(index_aux3),2)]
index_aux3
library(fdClassify)
library(fdClassify)
library(fdClassify)
################################## FLUXNET #########################################
flux_dir <- 'C:/Users/pedro/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/@run_EU_Stations/fluxnet/'
flux_files <- list.files(flux_dir)
flux_files <- flux_files[-c(1)]
flux_names <- substr(flux_files, start = 5, stop = 10)
i = 11
df_d <- df_fluxnet(paste(flux_dir,flux_files[i], sep = ''), timestep = 'day', soil_level = 1)
et0 <- penman_day(vtime = df_d$time,
vwind = df_d$wind_speed,
vtemp = df_d$temperature,
vvpd = df_d$vapor_p_def,
vheatflux = df_d$latent_heat,
altitude = 0)
pedro <- alencar2021(df_d$time, df_d$precipitation, et0$et0)
pedro[[2]]
pedro <- pedro[[1]][,c(1,ncol(pedro[[1]]))]
ford <- FordLabosier2017(df_d$time, df_d$soil_water)
ford[[2]]
