colnames(metric1) <- c("Mo and Lettenmeier","Ford and Labosier", "Pendergrass et al.",
"Noguera et al." , "Christian et al.", "Osman et al.",
'Alencar et al.', "Multi-criteria", 'metric')
melt_metric2 <- gather(metric1,key = 'model', value = 'value', 3:8 )
user_palette <- RColorBrewer::brewer.pal(n = 11, name = 'PuOr')
# display.brewer.pal(n = 11, name = 'PuOr')
all_data
month_fd <- data.frame()
for (j in 1:length(all_data)){
# j = 1
for (i in 2:10){
months <- all_series[,c(1,i)]
months <- tibble::tibble(time = as.POSIXct(months[,1]),
value = months[,2]) %>% tibbletime::as_tbl_time(time)
months <- tibbletime::collapse_by(months, period = 'month')
months <- months %>% group_by(time) %>%
summarise(var = max(.data[["value"]], na.rm = F))
if (i == 2){
month_1 <- months
} else {
month_1 <- left_join(month_1,months, by = 'time')
}
}
month_fd <- rbind(month_fd, month_1)
}
# setwd('D:/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/Summaries')
setwd('C:/Users/pedro/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/Summaries')
# path_aux <- 'D:/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/@run_EU_Stations/FD-Viz/'
path_aux <- 'C:/Users/pedro/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/@run_EU_Stations/FD-Viz/'
files <- list.files(path_aux)
files <- files[substr(files, 15,22) == '2015.csv']
names <- substr(files,1,6)
all_data <- list()
for (i in 1:length(names)){
# i = 1
data <- read.csv(paste(path_aux,files[i], sep = ''))
data <- data[,2:11]
colnames(data) <- c('Date',"Mo and Lettenmeier","Ford and Labosier",
"Pendergrass et al.","Noguera et al." , "Christian et al.",
"Osman et al.", 'Alencar et al.', "Mod. Ford and Labosier",
"Multi-criteria")
# data$sum <- rowSums(data[,2:10], na.rm = T)
all_data[[names[i]]] <- data
# all_data <- rbind(all_data, data)
}
all_data
month_fd <- data.frame()
for (j in 1:length(all_data)){
# j = 1
for (i in 2:10){
months <- all_series[,c(1,i)]
months <- tibble::tibble(time = as.POSIXct(months[,1]),
value = months[,2]) %>% tibbletime::as_tbl_time(time)
months <- tibbletime::collapse_by(months, period = 'month')
months <- months %>% group_by(time) %>%
summarise(var = max(.data[["value"]], na.rm = F))
if (i == 2){
month_1 <- months
} else {
month_1 <- left_join(month_1,months, by = 'time')
}
}
month_fd <- rbind(month_fd, month_1)
}
1:length(all_data)
View(all_data)
month_fd <- data.frame()
for (j in 1:length(all_data)){
all_series <- all_data[[j]]
for (i in 2:10){
months <- all_series[,c(1,i)]
months <- tibble::tibble(time = as.POSIXct(months[,1]),
value = months[,2]) %>% tibbletime::as_tbl_time(time)
months <- tibbletime::collapse_by(months, period = 'month')
months <- months %>% group_by(time) %>%
summarise(var = max(.data[["value"]], na.rm = F))
if (i == 2){
month_1 <- months
} else {
month_1 <- left_join(month_1,months, by = 'time')
}
}
month_fd <- rbind(month_fd, month_1)
}
month_fd
colnames(month_fd) <- colnames(all_data[[1]])
month_fd
View(month_fd)
write.csv(month_fd, 'all_evetns_month.csv')
month_fd[is.na(month_fd)] <- 0
month_fd_fac <- data.frame(lapply(month_fd[,2:10], as.factor))
colSums(month_fd[,2:10])
ref <- month_fd$`Mod. Ford and Labosier`
month_fd_adj <-  month_fd[,-c(9)]
length_fd <- nrow(month_fd) - 2
for (i in 2:9){
for (j in 2:length_fd){
if (month_fd[j,i] == 1){
month_fd_adj[j,i] <- max(ref[c(j-1,j,j+1)])
}
}
}
month_fd_adj <- data.frame(lapply(month_fd_adj[,2:9], as.factor))
ref <- as.factor(ref)
metric1 <- NULL
for (i in 1:8){
# i = 3
conf_mat <- confusionMatrix(data = month_fd_adj[,i], reference = ref)
overall <- data.frame(value = conf_mat$overall)
byclass <- data.frame(value = conf_mat$byClass)
conf_mat <- rbind(overall, byclass)
# conf_mat <- overall
if (i == 1){
metric1 <- conf_mat
} else {
metric1 <- cbind(metric1,conf_mat)
}
}
colnames(metric1) <- colnames(month_fd_adj)
metric1$metric <- rownames(metric1)
metric1 <- metric1[c(1,2,8,9,12,14),]
colnames(metric1) <- c("Mo and Lettenmeier","Ford and Labosier", "Pendergrass et al.",
"Noguera et al." , "Christian et al.", "Osman et al.",
'Alencar et al.', "Multi-criteria", 'metric')
melt_metric2 <- gather(metric1,key = 'model', value = 'value', 3:8 )
user_palette <- RColorBrewer::brewer.pal(n = 11, name = 'PuOr')
metric1 <- NULL
month_fd_adj <- data.frame(lapply(month_fd_adj[,2:9], as.factor))
month_fd_adj
############### Calculate metrics
write.csv(month_fd_adj, 'all_evetns_month.csv')
write.csv(month_fd, 'all_evetns_month.csv')
############### Calculate metrics
write.csv(month_fd_adj, 'all_evetns_month_adj.csv')
month_fd_adj <- data.frame(lapply(month_fd_adj[,2:9], as.factor))
ref <- month_fd$`Mod. Ford and Labosier`
month_fd_adj <-  month_fd[,-c(9)]
length_fd <- nrow(month_fd) - 2
for (i in 2:9){
for (j in 2:length_fd){
if (month_fd[j,i] == 1){
month_fd_adj[j,i] <- max(ref[c(j-1,j,j+1)])
}
}
}
############### Calculate metrics
write.csv(month_fd_adj, 'all_evetns_month_adj.csv')
month_fd_adj <- data.frame(lapply(month_fd_adj[,2:9], as.factor))
ref <- as.factor(ref)
metric1 <- NULL
for (i in 1:8){
# i = 3
conf_mat <- confusionMatrix(data = month_fd_adj[,i], reference = ref)
overall <- data.frame(value = conf_mat$overall)
byclass <- data.frame(value = conf_mat$byClass)
conf_mat <- rbind(overall, byclass)
# conf_mat <- overall
if (i == 1){
metric1 <- conf_mat
} else {
metric1 <- cbind(metric1,conf_mat)
}
}
library(caret)
metric1 <- NULL
for (i in 1:8){
# i = 3
conf_mat <- confusionMatrix(data = month_fd_adj[,i], reference = ref)
overall <- data.frame(value = conf_mat$overall)
byclass <- data.frame(value = conf_mat$byClass)
conf_mat <- rbind(overall, byclass)
# conf_mat <- overall
if (i == 1){
metric1 <- conf_mat
} else {
metric1 <- cbind(metric1,conf_mat)
}
}
colnames(metric1) <- colnames(month_fd_adj)
metric1$metric <- rownames(metric1)
metric1 <- metric1[c(1,2,8,9,12,14),]
colnames(metric1) <- c("Mo and Lettenmeier","Ford and Labosier", "Pendergrass et al.",
"Noguera et al." , "Christian et al.", "Osman et al.",
'Alencar et al.', "Multi-criteria", 'metric')
melt_metric2 <- gather(metric1,key = 'model', value = 'value', 3:8 )
user_palette <- RColorBrewer::brewer.pal(n = 11, name = 'PuOr')
m2 <-
ggplot(melt_metric2, aes(x = model, y = value, fill = metric))+
geom_bar(stat='identity', position = position_dodge2(padding = 0), alpha = 0.8)+
scale_fill_manual(values=user_palette[c(1,2,3,9,10,11)])+
# coord_polar()+
ggtitle('Comparison with Ford and Labosier method \n (from confusion matrix)')+
labs(x = '', '')+
theme(
# axis.text.x = element_text(angle = 360/(2*pi)*rev( seq( pi/6, 2*pi-pi/6, len=6)))
)
m2
ggsave('all_stations_6.png', plot = m2, width = 20, height = 12, units = c('cm'))
ggsave('all_stations_confusion_matrix.png', plot = m2, width = 20, height = 12, units = c('cm'))
ggplot(melt_events, aes(x = Date, y = name, fill = limit))+
geom_tile()+
scale_fill_continuous(na.value = '#EAEAEA',low="#FFFFFF", high="#DE0000",name = "Co-identification")+
theme_bw() +
scale_x_date(breaks = my_breaks,expand = c(0, 0))+
ggtitle(paste('Flash Drought events identified by at least',limit_methods, 'method (s)',sep = ' '))+
xlab('Date')+
ylab('Station')+
theme(
axis.text.x = element_text(angle = 90)
)
ggsave('all_stations_6.png', width = 20, height = 12, units = c('cm'))
j = 1
all_series <- all_data[[j]]
all_series
names(all_data[[j]])
names(all_data)
names(all_data)[i]
names(all_data)[j]
month_fd <- data.frame()
for (j in 1:length(all_data)){
all_series <- all_data[[j]]
for (i in 2:10){
months <- all_series[,c(1,i)]
months <- tibble::tibble(time = as.POSIXct(months[,1]),
value = months[,2]) %>% tibbletime::as_tbl_time(time)
months <- tibbletime::collapse_by(months, period = 'month')
months <- months %>% group_by(time) %>%
summarise(var = max(.data[["value"]], na.rm = F))
if (i == 2){
month_1 <- months
} else {
month_1 <- left_join(month_1,months, by = 'time')
}
month_1$station <- names(all_data)[j]
}
month_fd <- rbind(month_fd, month_1)
}
month_fd
month_fd <- data.frame()
for (j in 1:length(all_data)){
all_series <- all_data[[j]]
for (i in 2:10){
months <- all_series[,c(1,i)]
months <- tibble::tibble(time = as.POSIXct(months[,1]),
value = months[,2]) %>% tibbletime::as_tbl_time(time)
months <- tibbletime::collapse_by(months, period = 'month')
months <- months %>% group_by(time) %>%
summarise(var = max(.data[["value"]], na.rm = F))
if (i == 2){
month_1 <- months
} else {
month_1 <- left_join(month_1,months, by = 'time')
}
}
month_1$station <- names(all_data)[j]
month_fd <- rbind(month_fd, month_1)
}
month_fd
colnames(month_fd) <- c(colnames(all_data[[1]]),'station')
month_fd
View(month_fd)
month_fd[is.na(month_fd)] <- 0
month_fd_fac <- data.frame(lapply(month_fd[,2:10], as.factor))
colSums(month_fd[,2:10])
ref <- month_fd$`Mod. Ford and Labosier`
month_fd_adj <-  month_fd[,-c(9)]
length_fd <- nrow(month_fd) - 2
for (i in 2:9){
for (j in 2:length_fd){
if (month_fd[j,i] == 1){
month_fd_adj[j,i] <- max(ref[c(j-1,j,j+1)])
}
}
}
month_fd_adj
View(month_fd_adj)
############### Calculate metrics
write.csv(month_fd_adj, 'all_evetns_month_adj.csv')
month_fd_adj <- data.frame(lapply(month_fd_adj[,2:9], as.factor))
ref <- as.factor(ref)
stations_data <- read.table('stations.txt')
# setwd('D:/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/Summaries')
setwd('C:/Users/pedro/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/Summaries')
# path_aux <- 'D:/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/@run_EU_Stations/FD-Viz/'
path_aux <- 'C:/Users/pedro/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/@run_EU_Stations/FD-Viz/'
stations_data <- read.table('stations.txt')
stations_data <- read.delim('stations.txt')
stations_data
stations_data
month_fd_adj
colnames(month_fd) <- c(colnames(all_data[[1]]),'Station')
write.csv(month_fd, 'all_evetns_month.csv')
month_fd[is.na(month_fd)] <- 0
month_fd_fac <- data.frame(lapply(month_fd[,2:10], as.factor))
colSums(month_fd[,2:10])
ref <- month_fd$`Mod. Ford and Labosier`
month_fd_adj <-  month_fd[,-c(9)]
length_fd <- nrow(month_fd) - 2
for (i in 2:9){
for (j in 2:length_fd){
if (month_fd[j,i] == 1){
month_fd_adj[j,i] <- max(ref[c(j-1,j,j+1)])
}
}
}
month_fd_adj
View(month_fd_adj)
stations_data <- read.delim('stations.txt')
test <- (merge(stations_data, month_fd_adj, by = 'HouseType'))
test <- (merge(stations_data, month_fd_adj, by = 'Station'))
test
month_fd_adj <- data.frame(lapply(month_fd_adj[,2:9], as.factor))
month_fd_adj
month_fd_adj <- (merge(stations_data, month_fd_adj, by = 'Station'))
month_fd_adj
stations_data <- read.delim('stations.txt')
month_fd_adj <- (merge(stations_data, month_fd_adj, by = 'Station'))
month_fd_adj <- read('all_evetns_month_adj.csv')
month_fd_adj <- read.csv('all_evetns_month_adj.csv')
month_fd_adj
month_fd_adj <- read.csv('all_evetns_month_adj.csv')
stations_data <- read.delim('stations.txt')
month_fd_adj <- (merge(stations_data, month_fd_adj, by = 'Station'))
month_fd_adj
colnames(month_fd) <- c(colnames(all_data[[1]]),'Station')
write.csv(month_fd, 'all_evetns_month.csv')
month_fd[is.na(month_fd)] <- 0
month_fd_fac <- data.frame(lapply(month_fd[,2:10], as.factor))
colSums(month_fd[,2:10])
ref <- month_fd$`Mod. Ford and Labosier`
month_fd_adj <-  month_fd[,-c(9)]
length_fd <- nrow(month_fd) - 2
for (i in 2:9){
for (j in 2:length_fd){
if (month_fd[j,i] == 1){
month_fd_adj[j,i] <- max(ref[c(j-1,j,j+1)])
}
}
}
############### Calculate metrics
write.csv(month_fd_adj, 'all_evetns_month_adj.csv')
month_fd_adj <- read.csv('all_evetns_month_adj.csv')
month_fd_adj
stations_data <- read.delim('stations.txt')
month_fd_adj <- (merge(stations_data, month_fd_adj, by = 'Station'))
stations_data
stations_data <- read.delim('stations.txt')
month_fd_adj <- (merge(stations_data, month_fd_adj, by = 'Station'))
month_fd_adj
month_fd_adj <- read.csv('all_evetns_month_adj.csv')
month_fd_adj
stations_data <- read.delim('stations.txt')
month_fd_adj <- (merge(stations_data, month_fd_adj, by = 'Station'))
month_fd_adj
month_fd_adj <- read.csv('all_evetns_month_adj.csv')
stations_data <- read.delim('stations.txt')
month_fd_adj <- (merge(month_fd_adj,stations_data, by = 'Station'))
month_fd_adj
month_fd_adj[,2] <- NULL
month_fd_adj
month_fd_adj <- data.frame(lapply(month_fd_adj[,3:10], as.factor))
ref <- as.factor(ref)
metric1 <- NULL
for (i in 1:8){
# i = 3
conf_mat <- confusionMatrix(data = month_fd_adj[,i], reference = ref)
overall <- data.frame(value = conf_mat$overall)
byclass <- data.frame(value = conf_mat$byClass)
conf_mat <- rbind(overall, byclass)
# conf_mat <- overall
if (i == 1){
metric1 <- conf_mat
} else {
metric1 <- cbind(metric1,conf_mat)
}
}
colnames(metric1) <- colnames(month_fd_adj)
metric1$metric <- rownames(metric1)
metric1 <- metric1[c(1,2,8,9,12,14),]
colnames(metric1) <- c("Mo and Lettenmeier","Ford and Labosier", "Pendergrass et al.",
"Noguera et al." , "Christian et al.", "Osman et al.",
'Alencar et al.', "Multi-criteria", 'metric')
melt_metric2 <- gather(metric1,key = 'model', value = 'value', 3:8 )
user_palette <- RColorBrewer::brewer.pal(n = 11, name = 'PuOr')
m2 <-
ggplot(melt_metric2, aes(x = model, y = value, fill = metric))+
geom_bar(stat='identity', position = position_dodge2(padding = 0), alpha = 0.8)+
scale_fill_manual(values=user_palette[c(1,2,3,9,10,11)])+
# coord_polar()+
ggtitle('Comparison with Ford and Labosier method \n (from confusion matrix)')+
labs(x = '', '')+
theme(
# axis.text.x = element_text(angle = 360/(2*pi)*rev( seq( pi/6, 2*pi-pi/6, len=6)))
)
m2
write.csv(month_fd_adj, 'all_evetns_month_adj2.csv')
month_fd_adj
month_fd_adj
month_fd_adj <- read.csv('all_evetns_month_adj.csv')
stations_data <- read.delim('stations.txt')
month_fd_adj <- (merge(month_fd_adj,stations_data, by = 'Station'))
month_fd_adj[,2] <- NULL
month_fd_adj
month_fd_adj <- data.frame(lapply(month_fd_adj[,3:10], as.factor))
month_fd_adj
month_fd_adj <- read.csv('all_evetns_month_adj.csv')
#get landuse
stations_data <- read.delim('stations.txt')
month_fd_adj <- (merge(month_fd_adj,stations_data, by = 'Station'))
month_fd_adj[,2] <- NULL
month_fd_adj <- data.frame(lapply(month_fd_adj[,3:10], as.factor))
ref <- as.factor(ref)
month_fd_adj <- read.csv('all_evetns_month_adj.csv')
#get landuse
stations_data <- read.delim('stations.txt')
month_fd_adj <- (merge(month_fd_adj,stations_data, by = 'Station'))
month_fd_adj[,2] <- NULL
ref
month_fd_adj <- read.csv('all_evetns_month_adj.csv')
stations_data <- read.delim('stations.txt')
month_fd_adj <- (merge(month_fd_adj,stations_data, by = 'Station'))
month_fd_adj[,2] <- NULL
ref <- as.factor(ref)
devtools::install_github('pedroalencar1/fdClassify')
# setwd('D:/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/Summaries')
setwd('C:/Users/pedro/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/Summaries')
# path_aux <- 'D:/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/@run_EU_Stations/FD-Viz/'
path_aux <- 'C:/Users/pedro/OneDrive/@DOUTORADO/@@TU-Berlin/@Artigos/CAP 4/@run_EU_Stations/FD-Viz/'
files <- list.files(path_aux)
files <- files[substr(files, 15,22) == '2015.csv']
names <- substr(files,1,6)
all_data <- list()
for (i in 1:length(names)){
# i = 1
data <- read.csv(paste(path_aux,files[i], sep = ''))
data <- data[,2:11]
colnames(data) <- c('Date',"Mo and Lettenmeier","Ford and Labosier",
"Pendergrass et al.","Noguera et al." , "Christian et al.",
"Osman et al.", 'Alencar et al.', "Mod. Ford and Labosier",
"Multi-criteria")
# data$sum <- rowSums(data[,2:10], na.rm = T)
all_data[[names[i]]] <- data
# all_data <- rbind(all_data, data)
}
month_fd <- data.frame()
for (j in 1:length(all_data)){
all_series <- all_data[[j]]
for (i in 2:10){
months <- all_series[,c(1,i)]
months <- tibble::tibble(time = as.POSIXct(months[,1]),
value = months[,2]) %>% tibbletime::as_tbl_time(time)
months <- tibbletime::collapse_by(months, period = 'month')
months <- months %>% group_by(time) %>%
summarise(var = max(.data[["value"]], na.rm = F))
if (i == 2){
month_1 <- months
} else {
month_1 <- left_join(month_1,months, by = 'time')
}
}
month_1$station <- names(all_data)[j]
month_fd <- rbind(month_fd, month_1)
}
colnames(month_fd) <- c(colnames(all_data[[1]]),'Station')
write.csv(month_fd, 'all_evetns_month.csv')
month_fd[is.na(month_fd)] <- 0
month_fd_fac <- data.frame(lapply(month_fd[,2:10], as.factor))
colSums(month_fd[,2:10])
############### adjust the results to allow a 1 month buffer
ref <- month_fd$`Mod. Ford and Labosier`
month_fd_adj <-  month_fd[,-c(9)]
length_fd <- nrow(month_fd) - 2
for (i in 2:9){
for (j in 2:length_fd){
if (month_fd[j,i] == 1){
month_fd_adj[j,i] <- max(ref[c(j-1,j,j+1)])
}
}
}
############### Calculate metrics
write.csv(month_fd_adj, 'all_evetns_month_adj.csv')
month_fd_adj <- read.csv('all_evetns_month_adj.csv')
#get landuse
stations_data <- read.delim('stations.txt')
month_fd_adj <- (merge(month_fd_adj,stations_data, by = 'Station'))
month_fd_adj[,2] <- NULL
month_fd_adj[,3:10] <- data.frame(lapply(month_fd_adj[,3:10], as.factor))
month_fd_adj
ref <- as.factor(ref)
write.csv(month_fd_adj, 'all_evetns_month_adj2.csv')
name_stations <- unique(month_fd_adj$Station)
name_stations
land_use <- unique(month_fd_adj$IGPB2)
land_use
years <- unique(lubridate::year(month_fd_adj$Date))
years
years <- sort(unique(lubridate::year(month_fd_adj$Date)))
years
month_fd_adj
ref
############### Calculate metrics
month_fd_adj$Ford.and.Labosier_mod <- ref
write.csv(month_fd_adj, 'all_evetns_month_adj.csv', row.names = F)
month_fd_adj <- read.csv('all_evetns_month_adj.csv')
stations_data <- read.delim('stations.txt')
month_fd_adj <- (merge(month_fd_adj,stations_data, by = 'Station'))
month_fd_adj[,2] <- NULL
month_fd_adj[,3:10] <- data.frame(lapply(month_fd_adj[,3:10], as.factor))
ref <- as.factor(ref)
write.csv(month_fd_adj, 'all_evetns_month_adj2.csv', row.names = F)
library(fdClassify)
library(fdClassify)
